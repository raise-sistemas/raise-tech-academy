import { assertEquals } from "https://deno.land/std@0.115.1/testing/asserts.ts";
import { initGrid } from "../../../game/start/initGrid.js"

const gridBlue = [
  [
  "   1️⃣ ", "2️⃣ ",  
  "3️⃣ ",    "4️⃣ ",  
  "5️⃣ ",    "6️⃣ ",  
  "7️⃣ ",    "8️⃣ ",  
  "9️⃣ ",    "🔟  "   
],
[
  "   🄰 " , "🟦" ,     
  "🟦" ,     "🟦" ,     
  "🟦" ,     "🟦" ,     
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦"
],
[
  "   🄱 " , "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦"
],
[
  "   🄲 " , "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦"
],
[
  "   🄳 " , "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦"
],
[
  "   🄴 " , "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦"
],
[
  "   🄵 " , "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦"
],
[
  "   🄶 " , "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦"
],
[
  "   🄷 " , "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦"
],
[
  "   🄸 " , "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦"
],
[
  "   🄹 " , "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦" ,     "🟦" ,
  "🟦"
]
]
const gridBlack = [
  [
  "   1️⃣ ", "2️⃣ ",  
  "3️⃣ ",    "4️⃣ ",  
  "5️⃣ ",    "6️⃣ ",  
  "7️⃣ ",    "8️⃣ ",  
  "9️⃣ ",    "🔟  "   
],
[
  "   🄰 " , "⬛" ,     
  "⬛" ,     "⬛" ,     
  "⬛" ,     "⬛" ,     
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛"
],
[
  "   🄱 " , "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛"
],
[
  "   🄲 " , "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛"
],
[
  "   🄳 " , "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛"
],
[
  "   🄴 " , "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛"
],
[
  "   🄵 " , "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛"
],
[
  "   🄶 " , "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛"
],
[
  "   🄷 " , "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛"
],
[
  "   🄸 " , "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛"
],
[
  "   🄹 " , "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛" ,     "⬛" ,
  "⬛"
]
]

Deno.test("grid is array?", () => {
  const grid = initGrid('🟦')
  assertEquals((Array.isArray(grid)), true)
})

Deno.test("grid 🟦 is correct?", () => {
  const grid = initGrid('🟦')
  assertEquals((grid === gridBlue), true)
})

Deno.test("grid ⬛️ is correct?", () => {
  const grid = initGrid('⬛️')
  assertEquals(grid , gridBlack)
})


